{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Desktop/my-app/src/VideoPlayer.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VideoPlayer = () => {\n  _s();\n  const [videoLink, setVideoLink] = useState('');\n  const [comments, setComments] = useState([]);\n  const videoRef = useRef(null);\n  const handleVideoLinkChange = event => {\n    setVideoLink(event.target.value);\n  };\n  const handleVideoSubmit = async event => {\n    event.preventDefault();\n    const videoId = extractVideoId(videoLink);\n    if (videoId) {\n      try {\n        const videoDetails = await fetchVideoDetails(videoId);\n        embedVideo(videoDetails);\n      } catch (error) {\n        console.log('Error fetching video details:', error);\n      }\n    } else {\n      console.log('Invalid YouTube video link');\n    }\n  };\n  const fetchVideoDetails = async videoId => {\n    const response = await fetch(`https://www.googleapis.com/youtube/v3/videos?part=snippet&id=${videoId}&key=AIzaSyD--hwxU-ANmrurWpZ8qjfjbgKDOIZJNig`);\n    const data = await response.json();\n    if (data.items && data.items.length > 0) {\n      return data.items[0];\n    } else {\n      throw new Error('Video details not found');\n    }\n  };\n  const embedVideo = videoDetails => {\n    const playerOptions = {\n      videoId: videoDetails.id,\n      playerVars: {\n        autoplay: 0\n      }\n    };\n    new window.YT.Player(videoRef.current, playerOptions);\n  };\n  const handleVideoStateChange = event => {\n    if (event.data === window.YT.PlayerState.PAUSED) {\n      const currentTime = event.target.getCurrentTime();\n      promptComment(currentTime);\n    }\n  };\n  const promptComment = timestamp => {\n    const comment = prompt('Enter your comment:');\n    if (comment) {\n      const newComment = {\n        timestamp: timestamp,\n        text: comment\n      };\n      setComments([...comments, newComment]);\n    }\n  };\n  const renderComments = () => {\n    return comments.map((comment, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n      children: /*#__PURE__*/_jsxDEV(\"a\", {\n        href: `https://www.youtube.com/watch?v=${extractVideoId(videoLink)}&t=${comment.timestamp}`,\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        children: comment.text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this));\n  };\n  const extractVideoId = link => {\n    const videoIdMatch = link.match(/(?:[?&]v=|\\/embed\\/|\\/[0-9a-z_-]{11})([0-9a-z_-]{11})/i);\n    return videoIdMatch ? videoIdMatch[1] : null;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleVideoSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: videoLink,\n        onChange: handleVideoLinkChange,\n        placeholder: \"Enter YouTube video link\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Load Video\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: videoRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: renderComments()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n};\n_s(VideoPlayer, \"wBKnpCU5THwrw9drBEtZ50F5fZo=\");\n_c = VideoPlayer;\nexport default VideoPlayer;\nvar _c;\n$RefreshReg$(_c, \"VideoPlayer\");","map":{"version":3,"names":["React","useState","useRef","jsxDEV","_jsxDEV","VideoPlayer","_s","videoLink","setVideoLink","comments","setComments","videoRef","handleVideoLinkChange","event","target","value","handleVideoSubmit","preventDefault","videoId","extractVideoId","videoDetails","fetchVideoDetails","embedVideo","error","console","log","response","fetch","data","json","items","length","Error","playerOptions","id","playerVars","autoplay","window","YT","Player","current","handleVideoStateChange","PlayerState","PAUSED","currentTime","getCurrentTime","promptComment","timestamp","comment","prompt","newComment","text","renderComments","map","index","children","href","rel","fileName","_jsxFileName","lineNumber","columnNumber","link","videoIdMatch","match","onSubmit","type","onChange","placeholder","ref","_c","$RefreshReg$"],"sources":["/Users/admin/Desktop/my-app/src/VideoPlayer.js"],"sourcesContent":["import React, { useState, useRef } from 'react';\n\nconst VideoPlayer = () => {\n  const [videoLink, setVideoLink] = useState('');\n  const [comments, setComments] = useState([]);\n  const videoRef = useRef(null);\n\n  const handleVideoLinkChange = (event) => {\n    setVideoLink(event.target.value);\n  };\n\n  const handleVideoSubmit = async (event) => {\n    event.preventDefault();\n    const videoId = extractVideoId(videoLink);\n\n    if (videoId) {\n      try {\n        const videoDetails = await fetchVideoDetails(videoId);\n        embedVideo(videoDetails);\n      } catch (error) {\n        console.log('Error fetching video details:', error);\n      }\n    } else {\n      console.log('Invalid YouTube video link');\n    }\n  };\n\n  const fetchVideoDetails = async (videoId) => {\n    const response = await fetch(\n      `https://www.googleapis.com/youtube/v3/videos?part=snippet&id=${videoId}&key=AIzaSyD--hwxU-ANmrurWpZ8qjfjbgKDOIZJNig`\n    );\n    const data = await response.json();\n\n    if (data.items && data.items.length > 0) {\n      return data.items[0];\n    } else {\n      throw new Error('Video details not found');\n    }\n  };\n\n  const embedVideo = (videoDetails) => {\n    const playerOptions = {\n      videoId: videoDetails.id,\n      playerVars: {\n        autoplay: 0\n      }\n    };\n    new window.YT.Player(videoRef.current, playerOptions);\n  };\n\n  const handleVideoStateChange = (event) => {\n    if (event.data === window.YT.PlayerState.PAUSED) {\n      const currentTime = event.target.getCurrentTime();\n      promptComment(currentTime);\n    }\n  };\n\n  const promptComment = (timestamp) => {\n    const comment = prompt('Enter your comment:');\n    if (comment) {\n      const newComment = {\n        timestamp: timestamp,\n        text: comment\n      };\n      setComments([...comments, newComment]);\n    }\n  };\n\n  const renderComments = () => {\n    return comments.map((comment, index) => (\n      <li key={index}>\n        <a href={`https://www.youtube.com/watch?v=${extractVideoId(videoLink)}&t=${comment.timestamp}`} target=\"_blank\" rel=\"noopener noreferrer\">\n          {comment.text}\n        </a>\n      </li>\n    ));\n  };\n\n  const extractVideoId = (link) => {\n    const videoIdMatch = link.match(/(?:[?&]v=|\\/embed\\/|\\/[0-9a-z_-]{11})([0-9a-z_-]{11})/i);\n    return videoIdMatch ? videoIdMatch[1] : null;\n  };\n\n  return (\n    <div>\n      <form onSubmit={handleVideoSubmit}>\n        <input\n          type=\"text\"\n          value={videoLink}\n          onChange={handleVideoLinkChange}\n          placeholder=\"Enter YouTube video link\"\n        />\n        <button type=\"submit\">Load Video</button>\n      </form>\n      <div ref={videoRef}></div>\n      <ul>{renderComments()}</ul>\n    </div>\n  );\n};\n\nexport default VideoPlayer;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}