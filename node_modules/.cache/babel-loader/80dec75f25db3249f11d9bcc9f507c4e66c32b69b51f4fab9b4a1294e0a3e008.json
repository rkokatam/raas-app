{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Desktop/my-app/src/VideoPlayer.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from 'react';\nimport ExcelJS from 'exceljs';\nimport './apple-style.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VideoPlayer = () => {\n  _s();\n  const [videoLink, setVideoLink] = useState('');\n  const [comments, setComments] = useState([]);\n  const [inputComment, setInputComment] = useState('');\n  const videoRef = useRef(null);\n  const handleVideoLinkChange = event => {\n    setVideoLink(event.target.value);\n  };\n  const handleVideoSubmit = event => {\n    event.preventDefault();\n    // Extract video ID from the YouTube link\n    const videoId = extractVideoId(videoLink);\n    if (videoId) {\n      fetchVideoDetails(videoId);\n    } else {\n      alert('Invalid YouTube video link!');\n    }\n  };\n  const fetchVideoDetails = async videoId => {\n    const apiKey = 'AIzaSyD--hwxU-ANmrurWpZ8qjfjbgKDOIZJNig'; // Replace with your YouTube Data API key\n    const response = await fetch(`https://www.googleapis.com/youtube/v3/videos?part=snippet&id=${videoId}&key=${apiKey}`);\n    const data = await response.json();\n    if (data.items.length > 0) {\n      loadVideoPlayer(videoId);\n    } else {\n      alert('Failed to fetch video details!');\n    }\n  };\n  const loadVideoPlayer = videoId => {\n    // Load YouTube iframe API\n    const tag = document.createElement('script');\n    tag.src = 'https://www.youtube.com/iframe_api';\n    const firstScriptTag = document.getElementsByTagName('script')[0];\n    firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);\n    window.onYouTubeIframeAPIReady = () => {\n      new window.YT.Player(videoRef.current, {\n        videoId: videoId,\n        events: {\n          onStateChange: handleVideoStateChange\n        }\n      });\n    };\n  };\n  const handleVideoStateChange = event => {\n    // Listen for video playback events (e.g., pause, play)\n    if (event.data === window.YT.PlayerState.PAUSED) {\n      const currentTime = event.target.getCurrentTime();\n      promptComment(currentTime);\n    }\n  };\n  const promptComment = timestamp => {\n    const comment = prompt('Enter your comment:');\n    if (comment) {\n      const newComment = {\n        timestamp: timestamp,\n        text: comment\n      };\n      setComments(prevComments => [...prevComments, newComment]);\n    }\n  };\n  const handleCommentChange = event => {\n    setInputComment(event.target.value);\n  };\n  const handleSubmitComment = event => {\n    event.preventDefault();\n    if (inputComment.trim() !== '') {\n      const newComment = {\n        timestamp: 0,\n        text: inputComment\n      };\n      setComments(prevComments => [...prevComments, newComment]);\n      setInputComment('');\n    }\n  };\n  const formatTimestamp = timestamp => {\n    const minutes = Math.floor(timestamp / 60);\n    const seconds = Math.floor(timestamp % 60);\n    return `${minutes}m${seconds}s`;\n  };\n  const deleteComment = index => {\n    setComments(prevComments => prevComments.filter((_, i) => i !== index));\n  };\n  const handleExport = () => {\n    const workbook = new ExcelJS.Workbook();\n    const worksheet = workbook.addWorksheet('Comments');\n\n    // Add column headers\n    worksheet.getCell('A1').value = 'Timestamp';\n    worksheet.getCell('B1').value = 'Comment';\n\n    // Add comment data\n    comments.forEach((comment, index) => {\n      const rowIndex = index + 2; // Start from row 2 (index + 1 for 1-indexed rows)\n      worksheet.getCell(`A${rowIndex}`).value = formatTimestamp(comment.timestamp);\n      worksheet.getCell(`B${rowIndex}`).value = comment.text;\n    });\n\n    // Auto-fit column widths\n    worksheet.columns.forEach(column => {\n      column.width = 20;\n    });\n\n    // Generate Excel file\n    workbook.xlsx.writeBuffer().then(buffer => {\n      const blob = new Blob([buffer], {\n        type: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'\n      });\n      const url = URL.createObjectURL(blob);\n      const link = document.createElement('a');\n      link.href = url;\n      link.download = 'comments.xlsx';\n      link.click();\n    });\n  };\n  const renderComments = () => {\n    return /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"comments-table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Timestamp\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Comment\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Action\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: comments.map((comment, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          className: comment.timestamp === 0 ? 'highlight-row' : '',\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: formatTimestamp(comment.timestamp)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"a\", {\n              href: `${videoLink}&t=${formatTimestamp(comment.timestamp)}`,\n              target: \"_blank\",\n              rel: \"noopener noreferrer\",\n              children: comment.text\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"delete-button\",\n              onClick: () => deleteComment(index),\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this);\n  };\n\n  // Helper function to extract video ID from YouTube link\n  const extractVideoId = link => {\n    const videoIdMatch = link.match(/(?:[?&]v=|\\/embed\\/|\\/[0-9a-z_-]{11})([0-9a-z_-]{11})/i);\n    const unlistedIdMatch = link.match(/\\/v\\/([0-9a-z_-]{11})/i);\n    return videoIdMatch ? videoIdMatch[1] : unlistedIdMatch ? unlistedIdMatch[1] : null;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"video-player\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleVideoSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"video-link-input\",\n        type: \"text\",\n        value: videoLink,\n        onChange: handleVideoLinkChange,\n        placeholder: \"Enter YouTube video link\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"submit-button\",\n        type: \"submit\",\n        children: \"Load Video\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"video-container\",\n      ref: videoRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comments-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Comments\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 9\n      }, this), renderComments(), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmitComment,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"comment-input\",\n          type: \"text\",\n          value: inputComment,\n          onChange: handleCommentChange,\n          placeholder: \"Enter your comment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"submit-button\",\n          type: \"submit\",\n          children: \"Add Comment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"export-button\",\n        onClick: handleExport,\n        children: \"Export to Excel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 176,\n    columnNumber: 5\n  }, this);\n};\n_s(VideoPlayer, \"hzW5J4WkXIlPPSGGJedIV7WokdM=\");\n_c = VideoPlayer;\nexport default VideoPlayer;\nvar _c;\n$RefreshReg$(_c, \"VideoPlayer\");","map":{"version":3,"names":["React","useState","useRef","ExcelJS","jsxDEV","_jsxDEV","VideoPlayer","_s","videoLink","setVideoLink","comments","setComments","inputComment","setInputComment","videoRef","handleVideoLinkChange","event","target","value","handleVideoSubmit","preventDefault","videoId","extractVideoId","fetchVideoDetails","alert","apiKey","response","fetch","data","json","items","length","loadVideoPlayer","tag","document","createElement","src","firstScriptTag","getElementsByTagName","parentNode","insertBefore","window","onYouTubeIframeAPIReady","YT","Player","current","events","onStateChange","handleVideoStateChange","PlayerState","PAUSED","currentTime","getCurrentTime","promptComment","timestamp","comment","prompt","newComment","text","prevComments","handleCommentChange","handleSubmitComment","trim","formatTimestamp","minutes","Math","floor","seconds","deleteComment","index","filter","_","i","handleExport","workbook","Workbook","worksheet","addWorksheet","getCell","forEach","rowIndex","columns","column","width","xlsx","writeBuffer","then","buffer","blob","Blob","type","url","URL","createObjectURL","link","href","download","click","renderComments","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","rel","onClick","videoIdMatch","match","unlistedIdMatch","onSubmit","onChange","placeholder","ref","_c","$RefreshReg$"],"sources":["/Users/admin/Desktop/my-app/src/VideoPlayer.js"],"sourcesContent":["import React, { useState, useRef } from 'react';\nimport ExcelJS from 'exceljs';\nimport './apple-style.css'; \n\nconst VideoPlayer = () => {\n  const [videoLink, setVideoLink] = useState('');\n  const [comments, setComments] = useState([]);\n  const [inputComment, setInputComment] = useState('');\n  const videoRef = useRef(null);\n\n  const handleVideoLinkChange = (event) => {\n    setVideoLink(event.target.value);\n  };\n\n  const handleVideoSubmit = (event) => {\n    event.preventDefault();\n    // Extract video ID from the YouTube link\n    const videoId = extractVideoId(videoLink);\n    if (videoId) {\n      fetchVideoDetails(videoId);\n    } else {\n      alert('Invalid YouTube video link!');\n    }\n  };\n\n  const fetchVideoDetails = async (videoId) => {\n    const apiKey = 'AIzaSyD--hwxU-ANmrurWpZ8qjfjbgKDOIZJNig'; // Replace with your YouTube Data API key\n    const response = await fetch(`https://www.googleapis.com/youtube/v3/videos?part=snippet&id=${videoId}&key=${apiKey}`);\n    const data = await response.json();\n    if (data.items.length > 0) {\n      loadVideoPlayer(videoId);\n    } else {\n      alert('Failed to fetch video details!');\n    }\n  };\n\n  const loadVideoPlayer = (videoId) => {\n    // Load YouTube iframe API\n    const tag = document.createElement('script');\n    tag.src = 'https://www.youtube.com/iframe_api';\n    const firstScriptTag = document.getElementsByTagName('script')[0];\n    firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);\n\n    window.onYouTubeIframeAPIReady = () => {\n      new window.YT.Player(videoRef.current, {\n        videoId: videoId,\n        events: {\n          onStateChange: handleVideoStateChange\n        }\n      });\n    };\n  };\n\n  const handleVideoStateChange = (event) => {\n    // Listen for video playback events (e.g., pause, play)\n    if (event.data === window.YT.PlayerState.PAUSED) {\n      const currentTime = event.target.getCurrentTime();\n      promptComment(currentTime);\n    }\n  };\n\n  const promptComment = (timestamp) => {\n    const comment = prompt('Enter your comment:');\n    if (comment) {\n      const newComment = {\n        timestamp: timestamp,\n        text: comment\n      };\n      setComments((prevComments) => [...prevComments, newComment]);\n    }\n  };\n\n  const handleCommentChange = (event) => {\n    setInputComment(event.target.value);\n  };\n\n  const handleSubmitComment = (event) => {\n    event.preventDefault();\n    if (inputComment.trim() !== '') {\n      const newComment = {\n        timestamp: 0,\n        text: inputComment\n      };\n      setComments((prevComments) => [...prevComments, newComment]);\n      setInputComment('');\n    }\n  };\n  \n  const formatTimestamp = (timestamp) => {\n    const minutes = Math.floor(timestamp / 60);\n    const seconds = Math.floor(timestamp % 60);\n    return `${minutes}m${seconds}s`;\n  };\n\n  const deleteComment = (index) => {\n    setComments((prevComments) => prevComments.filter((_, i) => i !== index));\n  };\n\n  const handleExport = () => {\n    const workbook = new ExcelJS.Workbook();\n    const worksheet = workbook.addWorksheet('Comments');\n\n    // Add column headers\n    worksheet.getCell('A1').value = 'Timestamp';\n    worksheet.getCell('B1').value = 'Comment';\n\n    // Add comment data\n    comments.forEach((comment, index) => {\n      const rowIndex = index + 2; // Start from row 2 (index + 1 for 1-indexed rows)\n      worksheet.getCell(`A${rowIndex}`).value = formatTimestamp(comment.timestamp);\n      worksheet.getCell(`B${rowIndex}`).value = comment.text;\n    });\n\n    // Auto-fit column widths\n    worksheet.columns.forEach((column) => {\n      column.width = 20;\n    });\n\n    // Generate Excel file\n    workbook.xlsx.writeBuffer().then((buffer) => {\n      const blob = new Blob([buffer], { type: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet' });\n      const url = URL.createObjectURL(blob);\n      const link = document.createElement('a');\n      link.href = url;\n      link.download = 'comments.xlsx';\n      link.click();\n    });\n  };\n\n  const renderComments = () => {\n    return (\n      <table className=\"comments-table\">\n        <thead>\n          <tr>\n            <th>Timestamp</th>\n            <th>Comment</th>\n            <th>Action</th>\n          </tr>\n        </thead>\n        <tbody>\n          {comments.map((comment, index) => (\n            <tr key={index} className={comment.timestamp === 0 ? 'highlight-row' : ''}>\n              <td>{formatTimestamp(comment.timestamp)}</td>\n              <td>\n                <a\n                  href={`${videoLink}&t=${formatTimestamp(comment.timestamp)}`}\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                >\n                  {comment.text}\n                </a>\n              </td>\n              <td>\n                <button className=\"delete-button\" onClick={() => deleteComment(index)}>Delete</button>\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    );\n  };\n\n\n\n\n  \n\n  // Helper function to extract video ID from YouTube link\n  const extractVideoId = (link) => {\n    const videoIdMatch = link.match(/(?:[?&]v=|\\/embed\\/|\\/[0-9a-z_-]{11})([0-9a-z_-]{11})/i);\n    const unlistedIdMatch = link.match(/\\/v\\/([0-9a-z_-]{11})/i);\n    return videoIdMatch ? videoIdMatch[1] : unlistedIdMatch ? unlistedIdMatch[1] : null;\n  };\n\n  return (\n    <div className=\"video-player\">\n      <form onSubmit={handleVideoSubmit}>\n        <input\n          className=\"video-link-input\"\n          type=\"text\"\n          value={videoLink}\n          onChange={handleVideoLinkChange}\n          placeholder=\"Enter YouTube video link\"\n        />\n        <button className=\"submit-button\" type=\"submit\">Load Video</button>\n      </form>\n      <div className=\"video-container\" ref={videoRef}></div>\n      <div className=\"comments-section\">\n        <h2>Comments</h2>\n        {renderComments()}\n        <form onSubmit={handleSubmitComment}>\n          <input\n            className=\"comment-input\"\n            type=\"text\"\n            value={inputComment}\n            onChange={handleCommentChange}\n            placeholder=\"Enter your comment\"\n          />\n          <button className=\"submit-button\" type=\"submit\">Add Comment</button>\n        </form>\n        <button className=\"export-button\" onClick={handleExport}>Export to Excel</button>\n      </div>\n    </div>\n  );\n};\n\nexport default VideoPlayer;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}